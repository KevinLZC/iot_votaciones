<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Votaciones IoT</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
  <link rel="stylesheet" href="/assets/style.css">
  <link href="https://fonts.cdnfonts.com/css/gg-sans-2" rel="stylesheet">
  <script src="https://unpkg.com/mqtt/dist/mqtt.min.js"></script>
</head>

<body>
  <!--Navbar-->
  <nav class="navbar navbar-expand-lg sticky-top bg-body-tertiary">
    <div class="container-fluid gap-3 d-flex justify-content-center align-items-center">
      <img src="/assets/img/empresa.jpeg" alt="Logo" width="48" height="48"
        class="d-inline-block align-text-top rounded-circle">
      <h1 class="m-0">Jornada de Votaciones 2023</h1>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
        aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav ms-auto mb-2 mb-lg-0 gap-2">
          <li class="nav-item">
            <a class="nav-link active text-primary" aria-current="page" href="/">Inicio</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/presidente">Presidencia</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/gobernador">Gobernación</a>
          </li>
          <li class="nav-item active">
            <a class="nav-link font-weight-bold" href="/municipal">Municipal</a>
          </li>
          <li class="nav-item active">
            <a class="nav-link font-weight-bold" href="/grafico">Estadísticas</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>
  <!--Estructura Tarjetas-->
  <div class="container-fluid text-center h-100">
    <div class="roww d-flex align-items-center justify-content-center pt-5">
      <h1>
        CANDIDATURAS DISPUTADAS
      </h1>
    </div>
    <div class="row d-flex align-items-center justify-content-center">
      <div class="col-lg-4 col-md-6 col-12 mt-4 mb-4">
        <div class="card mx-auto rounded-4 shadow-lg border-0" style="width: 18rem;">
          <a href="/presidente">
            <img src="/assets/img/empresa.jpeg" class="card-img-top rounded-top-4" alt="...">
          </a>
          <div class="card-body">
            <h2>Presidente de la República</h2>
          </div>
        </div>
      </div>
      <div class="col-lg-4 col-md-6 col-12 mt-4 mb-4 mx-auto">
        <div class="card mx-auto rounded-4 shadow-lg border-0" style="width: 18rem;">
          <a href="/gobernador">
            <img src="/assets/img/empresa.jpeg" class="card-img-top rounded-top-4" alt="...">
          </a>
          <div class="card-body">
            <h2>Gobernador</h2>
          </div>
        </div>
      </div>
      <div class="col-lg-4 col-md-6 col-12 mt-4 mb-4">
        <div class="card mx-auto rounded-4 shadow-lg border-0" style="width: 18rem;">
          <a href="/municipal">
            <img src="/assets/img/empresa.jpeg" class="card-img-top rounded-top-4" alt="...">
          </a>
          <div class="card-body">
            <h2>Presidente Municipal</h2>
          </div>
        </div>
      </div>
    </div>
    <div class="row mx-auto">
      <div class="mt-4">
        <h2>UBICACIÓN DE LA CASILLA</h2>
      </div>
      <div id="locationMap" class="mx-auto m-5 rounded-4 shadow-lg border-0" style="width:300px;height:300px;"></div>
    </div>
    <div class="row">
      <footer class="text-center p-3" style="background-color: rgba(0, 0, 0, 0.2);">
        <p class="m-0 text-muted">© 2023 Internet de las Cosas</p>
        <div class="container d-flex justify-content-center align-items-center gap-5 p-3">
          <ul class="list-unstyled lista-derechos">
            <li>Nereo Uriel Aranda Peregrina</li>
            <li>Samuel Discua Amador</li>
            <li>Kevin Lázaro Cernas</li>
          </ul>
          <ul class="list-unstyled lista-derechos">
            <li>Eduardo Josue Rosas Vázquez</li>
            <li>Jorge Antonio Torres Lozoya</li>
            <li>Mónica Gabriela Verdín Aguilar</li>
          </ul>
        </div>
      </footer>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
    crossorigin="anonymous"></script>
  <script src="/assets/js/index.js"></script>
  <script>
    // variables globales del mapa
    let map, marker, lat, lng

    // función para inicializar el mapa
    function initMap() {
      // se define el mapa
      map = new google.maps.Map(document.getElementById("locationMap"), {
        center: { lat: 19.32491607904334, lng: -103.75702976599368 },
        zoom: 12,
      })
      // se define el marcador
      marker = new google.maps.Marker({
        position: { lat: 19.32491607904334, lng: -103.75702976599368 },
        map: map,
        url: '/grafico',
        title: "Casilla de votación",
      })
      // se define el evento click del marcador
      google.maps.event.addListener(marker, 'click', function () {
        window.location.href = marker.url;
        window.open(this.url, '_blank');
      });
    }

    // función para actualizar la ubicación del marcador
    function updateCoords(lat, lng) {
      let nuevaUbicacion = new google.maps.LatLng(lat, lng)
      marker.setPosition(nuevaUbicacion)
      map.setCenter(nuevaUbicacion)
    }

    // se obtiene la ubicación del último voto recibido
    fetch('/getlastlocation')
      .then(response => response.json())
      .then(data => {
        updateCoords(data.Datos[4].Latitud, data.Datos[4].Longitud)
      })
    // se crea la instancia para obtener los datos del websocket
    socket.addEventListener("message", async (event) => {
      let messageReceived = JSON.parse(event.data)
      updateCoords(messageReceived.Datos[4].Latitud, messageReceived.Datos[4].Longitud)
    })
  </script>
  <script src='https://maps.googleapis.com/maps/api/js?key=<%=API_KEY%>&callback=initMap'>
  </script>
</body>

</html>