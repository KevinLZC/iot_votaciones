<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Votaciones IoT</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
  <link rel="stylesheet" href="/assets/style.css">
  <script src="https://unpkg.com/mqtt/dist/mqtt.min.js"></script>
</head>

<body>
  <!--Navbar-->
  <nav class="navbar bg-body-tertiary">
    <div class="container-fluid align-text-center">
      <div class="navbar-brand d-flex align-items-center justify-content-center" s>
        <img src="/assets/imagen.avif" alt="Logo" width="48" height="48" class="d-inline-block align-text-top">
        <h1>Jornada de Votaciones 2023</h1>
      </div>
    </div>
  </nav>
  <!--Estructura Tarjetas-->
  <div class="container-fluid text-center h-100">
    <div class="row d-flex align-items-center justify-content-center">
      <div class="col-lg-4 col-md-6 col-12 mt-4 mb-4">
        <div class="card mx-auto rounded-4 shadow-lg border-0" style="width: 18rem;">
          <img src="/assets/imagen.avif" class="card-img-top rounded-top-4" alt="...">
          <div class="card-body">
            <h2>Partido 1</h2>
            <p class="card-text">VOTOS</p>
            <p class="card-text" id="votos1">0</p>
          </div>
        </div>
      </div>
      <div class="col-lg-4 col-md-6 col-12 mt-4 mb-4 mx-auto">
        <div class="card mx-auto rounded-4 shadow-lg border-0" style="width: 18rem;">
          <img src="/assets/imagen.avif" class="card-img-top rounded-top-4" alt="...">
          <div class="card-body">
            <h2>Partido 2</h2>
            <p class="card-text">VOTOS</p>
            <p class="card-text" id="votos2">0</p>
          </div>
        </div>
      </div>
      <div class="col-lg-4 col-md-6 col-12 mt-4 mb-4">
        <div class="card mx-auto rounded-4 shadow-lg border-0" style="width: 18rem;">
          <img src="/assets/imagen.avif" class="card-img-top rounded-top-4" alt="...">
          <div class="card-body">
            <h2>Partido 3</h2>
            <p class="card-text">VOTOS</p>
            <p class="card-text" id="votos3">0</p>
          </div>
        </div>
      </div>
    </div>
    <div class="row mx-auto">
      <div id="locationMap" class="mx-auto m-5 rounded-4 shadow-lg border-0" style="width:300px;height:300px;"></div>
    </div>
    <div class="row">
      <footer class="text-center p-3" style="background-color: rgba(0, 0, 0, 0.2);">
        <div class="container">
          <p class="m-0 text-muted">© 2023 Internet de las Cosas</p>
          <ul class="list-unstyled">
            <li>Kevin Lázaro Cernas</li>
            <li>Mónica Gabriela Verdín Aguilar</li>
            <li></li>
            <li></li>
          </ul>
        </div>
      </footer>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
    crossorigin="anonymous"></script>
  <script>
    let map;
    let marker;

    function initMap() {
      map = new google.maps.Map(document.getElementById("locationMap"), {
        center: { lat: 19.32491607904334, lng: -103.75702976599368 },
        zoom: 12,
      });

      marker = new google.maps.Marker({
        position: { lat: 19.32491607904334, lng: -103.75702976599368 },
        map: map,
        title: "Casilla de votación",
      });
    }
    function updateCoords(lat, lng) {
      let nuevaUbicacion = new google.maps.LatLng(lat, lng);
      marker.setPosition(nuevaUbicacion);
      map.setCenter(nuevaUbicacion);
    }

    const clientId = 'wss_' + Math.random().toString(16).substr(2, 8)
    const host = `wss://<%=EMQX_HOST%>:<%=EMQX_PORT%>/mqtt`
    const options = {
      clientId,
      clean: true,
      connectTimeout: 4000,
      username: `<%=EMQX_USERNAME%>`,
      password: `<%=EMQX_PASSWORD%>`,
      reconnectPeriod: 1000,
    }
    const client = mqtt.connect(host, options)
    client.on('connect', () => {
      console.log(`Client connected: ${clientId}`)
      client.subscribe(`<%=EMQX_TOPIC%>`, { qos: 2 })
    })
    let mensaje;
    client.on('message', (topic, message) => {
      mensaje = JSON.parse(message.toString())
      console.log(mensaje.voto1)
      let votoPartido1 = document.getElementById("votos1")
      let votoPartido2 = document.getElementById("votos2")
      let votoPartido3 = document.getElementById("votos3")
      if (mensaje.voto1) {
        let votoNumero = parseInt(votoPartido1.innerText)
        votoNumero++
        votoPartido1.innerHTML = votoNumero.toString()
      }
      if (mensaje.voto2) {
        let votoNumero = parseInt(votoPartido2.innerText)
        votoNumero++
        votoPartido2.innerHTML = votoNumero.toString()
      }
      if (mensaje.voto3) {
        let votoNumero = parseInt(votoPartido3.innerText)
        votoNumero++
        votoPartido3.innerHTML = votoNumero.toString()
      }
      updateCoords(mensaje.lat, mensaje.lng)
      console.log(mensaje.lat, mensaje.lng)
      //let myLatLng = {lat: mensaje.alt, lng: mensaje.lng} 
      //document.getElementById("locationMap").innerHTML = map(myLatLng)
    })
  </script>
  <script src='https://maps.googleapis.com/maps/api/js?key=<%=API_KEY%>&callback=initMap'>
  </script>
</body>

</html>